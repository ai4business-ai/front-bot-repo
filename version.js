// version.js - –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Mini App
const APP_VERSION = "2.0.0";
const BUILD_DATE = "2025-01-28";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏
function displayVersion() {
    const footer = document.querySelector('footer');
    if (footer) {
        const versionElement = document.createElement('div');
        versionElement.className = 'version-info';
        versionElement.innerHTML = `
            <div class="version-text">
                –í–µ—Ä—Å–∏—è: ${APP_VERSION} | –°–±–æ—Ä–∫–∞: ${BUILD_DATE} | –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: v2.0
            </div>
        `;
        footer.appendChild(versionElement);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–µ—à–∞ –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
function checkForUpdates() {
    const cachedVersion = localStorage.getItem('app_version');
    const currentVersion = APP_VERSION;
    
    if (cachedVersion && cachedVersion !== currentVersion) {
        console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –≤–µ—Ä—Å–∏–∏ ${cachedVersion} –¥–æ ${currentVersion}`);
        
        // –û—á–∏—â–∞–µ–º –∫–µ—à —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏ major –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        const oldMajor = cachedVersion.split('.')[0];
        const newMajor = currentVersion.split('.')[0];
        
        if (oldMajor !== newMajor) {
            console.log('Major –≤–µ—Ä—Å–∏—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å - –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
            // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏ major –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            Object.keys(localStorage).forEach(key => {
                if (key.startsWith('user_registered_')) {
                    localStorage.removeItem(key);
                }
            });
        }
        
        // –û—á–∏—â–∞–µ–º –∫–µ—à –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if ('caches' in window) {
            caches.keys().then(function(names) {
                names.forEach(function(name) {
                    caches.delete(name);
                });
            });
        }
    }
    
    localStorage.setItem('app_version', currentVersion);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π
function getVersionHistory() {
    return [
        {
            version: "2.0.0",
            date: "2025-01-28",
            features: [
                "–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                "–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö SQLite –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö",
                "API –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö Telegram",
                "–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º"
            ]
        },
        {
            version: "1.0.1", 
            date: "2025-01-28",
            features: [
                "–£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫",
                "–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
                "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –º–µ–ª–∫–∏–µ –±–∞–≥–∏"
            ]
        },
        {
            version: "1.0.0",
            date: "2025-01-27", 
            features: [
                "–ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑",
                "–í—ã–±–æ—Ä –∏–∑ 4 –±–∏–∑–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤",
                "Telegram Mini App –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
                "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–º–Ω–æ–π –∏ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã"
            ]
        }
    ];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function checkCompatibility() {
    const userAgent = navigator.userAgent;
    const isAndroid = /Android/i.test(userAgent);
    const isIOS = /iPhone|iPad|iPod/i.test(userAgent);
    const isTelegram = window.Telegram && window.Telegram.WebApp;
    
    return {
        isTelegram: isTelegram,
        isAndroid: isAndroid,
        isIOS: isIOS,
        supportsRegistration: isTelegram && (isAndroid || isIOS),
        browserVersion: getBrowserVersion()
    };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
function getBrowserVersion() {
    const userAgent = navigator.userAgent;
    
    if (userAgent.includes('Chrome/')) {
        const match = userAgent.match(/Chrome\/(\d+)/);
        return match ? `Chrome ${match[1]}` : 'Chrome Unknown';
    } else if (userAgent.includes('Safari/')) {
        const match = userAgent.match(/Version\/(\d+)/);
        return match ? `Safari ${match[1]}` : 'Safari Unknown';
    }
    
    return 'Unknown Browser';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º
function runDiagnostics() {
    const compatibility = checkCompatibility();
    const hasLocalStorage = typeof(Storage) !== "undefined";
    const hasTelegramWebApp = !!(window.Telegram && window.Telegram.WebApp);
    
    const diagnostics = {
        version: APP_VERSION,
        buildDate: BUILD_DATE,
        compatibility: compatibility,
        localStorage: hasLocalStorage,
        telegramWebApp: hasTelegramWebApp,
        initData: hasTelegramWebApp ? !!window.Telegram.WebApp.initData : false,
        user: hasTelegramWebApp ? !!window.Telegram.WebApp.initDataUnsafe.user : false,
        timestamp: new Date().toISOString()
    };
    
    console.log('App Diagnostics:', diagnostics);
    return diagnostics;
}

// CSS —Å—Ç–∏–ª–∏ –¥–ª—è –≤–µ—Ä—Å–∏–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ)
const versionStyles = `
.version-info {
    text-align: center;
    margin-top: 16px;
    padding-top: 12px;
    border-top: 1px solid var(--tg-theme-secondary-bg-color);
}

.version-text {
    font-size: 11px;
    color: var(--tg-theme-hint-color);
    opacity: 0.7;
    font-family: monospace;
    line-height: 1.3;
}

.version-badge {
    display: inline-block;
    background-color: var(--tg-theme-button-color);
    color: var(--tg-theme-button-text-color);
    padding: 2px 6px;
    border-radius: 8px;
    font-size: 9px;
    font-weight: 600;
    margin-left: 4px;
    text-transform: uppercase;
}
`;

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
window.AppVersion = {
    version: APP_VERSION,
    buildDate: BUILD_DATE,
    displayVersion: displayVersion,
    checkForUpdates: checkForUpdates,
    getVersionHistory: getVersionHistory,
    checkCompatibility: checkCompatibility,
    runDiagnostics: runDiagnostics,
    styles: versionStyles
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
    setTimeout(() => {
        console.log('üîß Development Mode - Running Diagnostics');
        runDiagnostics();
    }, 1000);
}
