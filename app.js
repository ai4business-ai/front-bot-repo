document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
    const tgApp = window.Telegram.WebApp;
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (—Å–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫ Telegram)
    tgApp.ready();
    
    // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤—Å—é –≤—ã—Å–æ—Ç—É
    tgApp.expand();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤–µ—Ä—Å–∏—é
    if (window.AppVersion) {
        window.AppVersion.checkForUpdates();
        window.AppVersion.displayVersion();
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    tgApp.MainButton.setParams({
        text: "–í—ã–±–µ—Ä–∏—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞",
        color: tgApp.themeParams.button_color,
        text_color: tgApp.themeParams.button_text_color,
        is_active: false,
        is_visible: false
    });
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã Telegram
    applyTelegramTheme();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
    tgApp.onEvent('themeChanged', applyTelegramTheme);
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    let selectedAssistant = null;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ Mini App
    const launchSource = detectLaunchSource();
    console.log('Launch source detected:', launchSource);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤
    const assistantCards = document.querySelectorAll('.assistant-card');
    assistantCards.forEach(card => {
        card.addEventListener('click', function() {
            // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
            assistantCards.forEach(c => c.classList.remove('selected'));
            
            // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            this.classList.add('selected');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            selectedAssistant = this.getAttribute('data-command');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
            const assistantName = getAssistantName(selectedAssistant);
            tgApp.MainButton.setText(`–í—ã–±—Ä–∞—Ç—å: ${assistantName}`);
            tgApp.MainButton.enable();
            tgApp.MainButton.show();
        });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    tgApp.MainButton.onClick(function() {
        if (selectedAssistant) {
            sendAssistantSelection(launchSource);
        }
    });
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ Mini App
     * @returns {string} - —Ç–∏–ø –∑–∞–ø—É—Å–∫–∞: 'keyboard', 'menu', 'inline' –∏–ª–∏ 'unknown'
     */
    function detectLaunchSource() {
        const initData = tgApp.initDataUnsafe;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ query_id - –µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ —ç—Ç–æ –∑–∞–ø—É—Å–∫ –∏–∑ inline/menu button
        if (initData.query_id) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ start_param - –µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ —ç—Ç–æ menu button
            if (initData.start_param !== undefined) {
                return 'menu';
            } else {
                return 'inline';
            }
        } else {
            // –ï—Å–ª–∏ –Ω–µ—Ç query_id, —Ç–æ —ç—Ç–æ keyboard button
            return 'keyboard';
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–µ –≤ –±–æ—Ç–∞
     * @param {string} source - –∏—Å—Ç–æ—á–Ω–∏–∫ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    function sendAssistantSelection(source) {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
            tgApp.MainButton.showProgress();
            tgApp.MainButton.setText("–û—Ç–ø—Ä–∞–≤–∫–∞...");
            
            if (source === 'keyboard') {
                // –î–ª—è keyboard button –∏—Å–ø–æ–ª—å–∑—É–µ–º sendData
                const dataToSend = JSON.stringify({
                    action: "show_specific_assistant",
                    selected_assistant: selectedAssistant,
                    source: source
                });
                
                console.log('Sending data via sendData:', dataToSend);
                tgApp.sendData(dataToSend);
                
            } else if (source === 'menu' || source === 'inline') {
                // –î–ª—è menu button –∏ inline –∏—Å–ø–æ–ª—å–∑—É–µ–º answerWebAppQuery —á–µ—Ä–µ–∑ API
                sendViaWebAppQuery(selectedAssistant, source);
                
            } else {
                // Fallback - –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sendData
                console.log('Unknown source, trying sendData fallback');
                const dataToSend = JSON.stringify({
                    action: "show_specific_assistant", 
                    selected_assistant: selectedAssistant,
                    source: 'fallback'
                });
                tgApp.sendData(dataToSend);
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
            handleSendError();
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ WebApp Query (–¥–ª—è menu/inline buttons)
     * @param {string} assistantType - —Ç–∏–ø –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     * @param {string} source - –∏—Å—Ç–æ—á–Ω–∏–∫ –∑–∞–ø—É—Å–∫–∞
     */
    function sendViaWebAppQuery(assistantType, source) {
        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ answerWebAppQuery
        const messageData = {
            type: "article",
            id: "assistant_" + assistantType + "_" + Date.now(),
            title: `–í—ã–±—Ä–∞–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: ${getAssistantName(assistantType)}`,
            description: getAssistantDescription(assistantType),
            message_text: `ü§ñ –í—ã–±—Ä–∞–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: *${getAssistantName(assistantType)}*\n\n${getAssistantDescription(assistantType)}\n\nüí¨ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è:`,
            parse_mode: "Markdown",
            reply_markup: {
                inline_keyboard: [[{
                    text: `üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å ${getAssistantName(assistantType)}`,
                    callback_data: `select_${assistantType}`
                }]]
            }
        };
        
        console.log('Sending via WebApp query:', messageData);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ switchInlineQuery –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        tgApp.switchInlineQuery('assistant_selected_' + assistantType, ['private']);
        
        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => {
            tgApp.showAlert(`–í—ã–±—Ä–∞–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: ${getAssistantName(assistantType)}. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —á–∞—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞" –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.`);
            tgApp.close();
        }, 500);
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
     */
    function handleSendError() {
        tgApp.MainButton.hideProgress();
        tgApp.MainButton.setText(`–í—ã–±—Ä–∞—Ç—å: ${getAssistantName(selectedAssistant)}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
        tgApp.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —á–∞—Ç –∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π "–í—ã–±—Ä–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞" –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.');
    }
    
    /**
     * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã Telegram –∫ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
     */
    function applyTelegramTheme() {
        if (tgApp.colorScheme === 'dark') {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark');
        }
        
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∏–∑ Telegram WebApp
        const themeParams = tgApp.themeParams;
        
        if (themeParams.bg_color) {
            document.documentElement.style.setProperty('--tg-theme-bg-color', themeParams.bg_color);
        }
        if (themeParams.text_color) {
            document.documentElement.style.setProperty('--tg-theme-text-color', themeParams.text_color);
        }
        if (themeParams.hint_color) {
            document.documentElement.style.setProperty('--tg-theme-hint-color', themeParams.hint_color);
        }
        if (themeParams.link_color) {
            document.documentElement.style.setProperty('--tg-theme-link-color', themeParams.link_color);
        }
        if (themeParams.button_color) {
            document.documentElement.style.setProperty('--tg-theme-button-color', themeParams.button_color);
        }
        if (themeParams.button_text_color) {
            document.documentElement.style.setProperty('--tg-theme-button-text-color', themeParams.button_text_color);
        }
        if (themeParams.secondary_bg_color) {
            document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', themeParams.secondary_bg_color);
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º RGB –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ button_color –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–≥–æ —Ñ–æ–Ω–∞
        const buttonColor = themeParams.button_color || '#2481cc';
        const rgb = hexToRgb(buttonColor);
        if (rgb) {
            document.documentElement.style.setProperty('--tg-theme-button-color-rgb', `${rgb.r}, ${rgb.g}, ${rgb.b}`);
        }
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ –µ–≥–æ –∫–æ–º–∞–Ω–¥–µ
     * @param {string} command - –ö–æ–º–∞–Ω–¥–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     * @returns {string} - –ù–∞–∑–≤–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     */
    function getAssistantName(command) {
        const names = {
            'market': '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞',
            'founder': '–ò–¥–µ–∏ —Ñ–∞—É–Ω–¥–µ—Ä–∞',
            'business': '–ë–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å',
            'adapter': '–ê–¥–∞–ø—Ç–∞—Ç–æ—Ä –∏–¥–µ–π'
        };
        
        return names[command] || command;
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ –µ–≥–æ –∫–æ–º–∞–Ω–¥–µ
     * @param {string} command - –ö–æ–º–∞–Ω–¥–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     * @returns {string} - –û–ø–∏—Å–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     */
    function getAssistantDescription(command) {
        const descriptions = {
            'market': '–ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—ã–Ω–æ–∫, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ –Ω–∞–π—Ç–∏ –Ω–∏—à–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è',
            'founder': '–ü–æ–º–æ–≥–∞–µ—Ç –æ–±—Å—É–¥–∏—Ç—å –∏ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å –∏–¥–µ–∏ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è –±–∏–∑–Ω–µ—Å–∞',
            'business': '–ü–æ–º–æ–≥–∞–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å',
            'adapter': '–ü–æ–º–æ–≥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –∏–¥–µ–∏ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–µ–π—Å–æ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞'
        };
        
        return descriptions[command] || '–ë–∏–∑–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç';
    }
    
    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç HEX —Ü–≤–µ—Ç –≤ RGB –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
     * @param {string} hex - HEX-–∫–æ–¥ —Ü–≤–µ—Ç–∞
     * @returns {Object|null} - –û–±—ä–µ–∫—Ç —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ RGB –∏–ª–∏ null
     */
    function hexToRgb(hex) {
        const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }
});
