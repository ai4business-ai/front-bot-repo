// –î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–∞—á–∞–ª–æ app.js –≤ front-bot-repo:
if (window.location.search.includes('tgWebAppVersion=') && localStorage.getItem('force_refresh') !== '2.0.0') {
    localStorage.setItem('force_refresh', '2.0.0');
    window.location.reload(true);
}

document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
    const tgApp = window.Telegram.WebApp;
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (—Å–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫ Telegram)
    tgApp.ready();
    
    // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤—Å—é –≤—ã—Å–æ—Ç—É
    tgApp.expand();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤–µ—Ä—Å–∏—é
    if (window.AppVersion) {
        window.AppVersion.checkForUpdates();
        window.AppVersion.displayVersion();
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    tgApp.MainButton.setParams({
        text: "–í—ã–±–µ—Ä–∏—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞",
        color: tgApp.themeParams.button_color,
        text_color: tgApp.themeParams.button_text_color,
        is_active: false,
        is_visible: false
    });
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã Telegram
    applyTelegramTheme();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
    tgApp.onEvent('themeChanged', applyTelegramTheme);
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    let selectedAssistant = null;
    let isRegistered = false;
    let currentUser = null;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ Mini App
    const launchSource = detectLaunchSource();
    console.log('Launch source detected:', launchSource);
    console.log('InitData:', tgApp.initDataUnsafe);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    initializeUser();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤
    const assistantCards = document.querySelectorAll('.assistant-card');
    assistantCards.forEach(card => {
        card.addEventListener('click', function() {
            if (!isRegistered) {
                // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                showRegistrationFlow();
                return;
            }
            
            // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
            assistantCards.forEach(c => c.classList.remove('selected'));
            
            // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            this.classList.add('selected');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            selectedAssistant = this.getAttribute('data-command');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
            const assistantName = getAssistantName(selectedAssistant);
            tgApp.MainButton.setText(`–í—ã–±—Ä–∞—Ç—å: ${assistantName}`);
            tgApp.MainButton.enable();
            tgApp.MainButton.show();
        });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    tgApp.MainButton.onClick(function() {
        if (!isRegistered) {
            showRegistrationFlow();
            return;
        }
        
        if (selectedAssistant) {
            sendAssistantSelection(launchSource);
        }
    });
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     */
    function initializeUser() {
        const initData = tgApp.initDataUnsafe;
        
        if (initData.user) {
            currentUser = initData.user;
            displayUserInfo(currentUser);
            
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã –±—ã–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —ç—Ç–æ –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å)
            checkRegistrationStatus();
        }
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
     */
    function displayUserInfo(user) {
        const userInfoContainer = document.getElementById('user-info');
        if (userInfoContainer && user) {
            const displayName = user.username ? `@${user.username}` : 
                               (user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
            
            userInfoContainer.innerHTML = `
                <div class="user-profile">
                    <div class="user-avatar">${getInitials(user)}</div>
                    <div class="user-name">${displayName}</div>
                    <div class="registration-status ${isRegistered ? 'registered' : 'not-registered'}">
                        ${isRegistered ? '‚úÖ' : '‚è≥'}
                    </div>
                </div>
            `;
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
     */
    function getInitials(user) {
        if (user.first_name) {
            const firstInitial = user.first_name.charAt(0).toUpperCase();
            const lastInitial = user.last_name ? user.last_name.charAt(0).toUpperCase() : '';
            return firstInitial + lastInitial;
        }
        return user.username ? user.username.charAt(0).toUpperCase() : 'U';
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async function checkRegistrationStatus() {
        try {
            // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
            // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            const storedStatus = localStorage.getItem(`user_registered_${currentUser.id}`);
            isRegistered = storedStatus === 'true';
            
            updateUIBasedOnRegistration();
            displayUserInfo(currentUser);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
            isRegistered = false;
            updateUIBasedOnRegistration();
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
     */
    function updateUIBasedOnRegistration() {
        const instructionSteps = document.querySelector('.instruction-steps');
        const headerSubtitle = document.querySelector('.header-subtitle');
        
        if (!isRegistered) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if (headerSubtitle) {
                headerSubtitle.textContent = '–ü—Ä–æ–π–¥–∏—Ç–µ –±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤';
            }
            
            if (instructionSteps) {
                instructionSteps.innerHTML = `
                    <div class="step">
                        <div class="step-number">1</div>
                        <div class="step-text">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</div>
                    </div>
                    <div class="step">
                        <div class="step-number">2</div>
                        <div class="step-text">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</div>
                    </div>
                    <div class="step">
                        <div class="step-number">3</div>
                        <div class="step-text">–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</div>
                    </div>
                    <div class="step">
                        <div class="step-number">4</div>
                        <div class="step-text">–ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º</div>
                    </div>
                `;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            document.body.classList.add('not-registered');
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if (headerSubtitle) {
                headerSubtitle.textContent = '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É, –∑–∞—Ç–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞';
            }
            
            document.body.classList.remove('not-registered');
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
     */
    function showRegistrationFlow() {
        if (!currentUser) {
            tgApp.showAlert('–û—à–∏–±–∫–∞: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
            return;
        }
        
        const userName = currentUser.first_name || currentUser.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        
        tgApp.showConfirm(
            `üëã –ü—Ä–∏–≤–µ—Ç, ${userName}!\n\n` +
            `–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n\n` +
            `üìã –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n` +
            `‚Ä¢ –ò–º—è: ${currentUser.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n` +
            `‚Ä¢ Username: ${currentUser.username ? '@' + currentUser.username : '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n` +
            `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é?`,
            function(confirmed) {
                if (confirmed) {
                    performRegistration();
                }
            }
        );
    }
    
    /**
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async function performRegistration() {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            tgApp.MainButton.setText("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...");
            tgApp.MainButton.showProgress();
            tgApp.MainButton.show();
            
            // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –∑–∞–ø—Ä–æ—Å —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π initData
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
            
            // –ò–º–∏—Ç–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å
            await new Promise(resolve => setTimeout(resolve, 1500));
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            localStorage.setItem(`user_registered_${currentUser.id}`, 'true');
            isRegistered = true;
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ sendData (—Ç–æ–ª—å–∫–æ –¥–ª—è keyboard button)
            const registrationData = {
                action: "register_user",
                user_id: currentUser.id,
                source: launchSource
            };
            
            if (launchSource === 'keyboard') {
                tgApp.sendData(JSON.stringify(registrationData));
            } else {
                // –î–ª—è menu button –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                tgApp.MainButton.hideProgress();
                tgApp.MainButton.hide();
                
                tgApp.showAlert(
                    '‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n' +
                    '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –∏ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.',
                    function() {
                        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                        updateUIBasedOnRegistration();
                        displayUserInfo(currentUser);
                    }
                );
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
            tgApp.MainButton.hideProgress();
            tgApp.MainButton.hide();
            
            tgApp.showAlert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ Mini App
     * @returns {string} - —Ç–∏–ø –∑–∞–ø—É—Å–∫–∞: 'keyboard', 'menu_or_inline'
     */
    function detectLaunchSource() {
        const initData = tgApp.initDataUnsafe;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ query_id - –µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ —ç—Ç–æ –∑–∞–ø—É—Å–∫ –∏–∑ inline/menu button
        if (initData.query_id) {
            return 'menu_or_inline';
        } else {
            // –ï—Å–ª–∏ –Ω–µ—Ç query_id, —Ç–æ —ç—Ç–æ keyboard button
            return 'keyboard';
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–µ –≤ –±–æ—Ç–∞
     * @param {string} source - –∏—Å—Ç–æ—á–Ω–∏–∫ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    function sendAssistantSelection(source) {
        if (!isRegistered) {
            showRegistrationFlow();
            return;
        }
        
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
            tgApp.MainButton.showProgress();
            tgApp.MainButton.setText("–û—Ç–ø—Ä–∞–≤–∫–∞...");
            
            if (source === 'keyboard') {
                // –î–ª—è keyboard button –∏—Å–ø–æ–ª—å–∑—É–µ–º sendData
                const dataToSend = JSON.stringify({
                    action: "show_specific_assistant",
                    selected_assistant: selectedAssistant,
                    source: source,
                    user_id: currentUser.id
                });
                
                console.log('Sending data via sendData:', dataToSend);
                tgApp.sendData(dataToSend);
                
            } else {
                // –î–ª—è menu button –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                console.log('Menu/inline button detected - showing fallback instruction');
                showFallbackInstruction(selectedAssistant);
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
            handleSendError();
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–∞–∫ fallback –¥–ª—è menu button
     * @param {string} assistantType - —Ç–∏–ø –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     */
    function showFallbackInstruction(assistantType) {
        const assistantName = getAssistantName(assistantType);
        
        tgApp.MainButton.hideProgress();
        tgApp.MainButton.setText("–í—ã–±—Ä–∞–Ω–æ");
        tgApp.MainButton.disable();
        
        const message = 
            `‚úÖ –í—ã–±—Ä–∞–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: ${assistantName}\n\n` +
            `üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n` +
            `1. –ó–∞–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n` +
            `2. –í —á–∞—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üéÆ –í—ã–±—Ä–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"\n` +
            `3. –í—ã–±–µ—Ä–∏—Ç–µ "${assistantName}" –∏–∑ —Å–ø–∏—Å–∫–∞\n\n` +
            `–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–∑ –º–µ–Ω—é.`;
        
        tgApp.showConfirm(message, function(confirmed) {
            if (confirmed) {
                // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª OK - –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                tgApp.close();
            } else {
                // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª Cancel - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                tgApp.MainButton.setText(`–í—ã–±—Ä–∞—Ç—å: ${assistantName}`);
                tgApp.MainButton.enable();
            }
        });
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
     */
    function handleSendError() {
        tgApp.MainButton.hideProgress();
        if (selectedAssistant) {
            tgApp.MainButton.setText(`–í—ã–±—Ä–∞—Ç—å: ${getAssistantName(selectedAssistant)}`);
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
            showFallbackInstruction(selectedAssistant);
        } else {
            tgApp.MainButton.setText("–í—ã–±–µ—Ä–∏—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞");
        }
    }
    
    /**
     * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã Telegram –∫ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
     */
    function applyTelegramTheme() {
        if (tgApp.colorScheme === 'dark') {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark');
        }
        
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∏–∑ Telegram WebApp
        const themeParams = tgApp.themeParams;
        
        if (themeParams.bg_color) {
            document.documentElement.style.setProperty('--tg-theme-bg-color', themeParams.bg_color);
        }
        if (themeParams.text_color) {
            document.documentElement.style.setProperty('--tg-theme-text-color', themeParams.text_color);
        }
        if (themeParams.hint_color) {
            document.documentElement.style.setProperty('--tg-theme-hint-color', themeParams.hint_color);
        }
        if (themeParams.link_color) {
            document.documentElement.style.setProperty('--tg-theme-link-color', themeParams.link_color);
        }
        if (themeParams.button_color) {
            document.documentElement.style.setProperty('--tg-theme-button-color', themeParams.button_color);
        }
        if (themeParams.button_text_color) {
            document.documentElement.style.setProperty('--tg-theme-button-text-color', themeParams.button_text_color);
        }
        if (themeParams.secondary_bg_color) {
            document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', themeParams.secondary_bg_color);
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º RGB –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ button_color –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–≥–æ —Ñ–æ–Ω–∞
        const buttonColor = themeParams.button_color || '#2481cc';
        const rgb = hexToRgb(buttonColor);
        if (rgb) {
            document.documentElement.style.setProperty('--tg-theme-button-color-rgb', `${rgb.r}, ${rgb.g}, ${rgb.b}`);
        }
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ –µ–≥–æ –∫–æ–º–∞–Ω–¥–µ
     * @param {string} command - –ö–æ–º–∞–Ω–¥–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     * @returns {string} - –ù–∞–∑–≤–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     */
    function getAssistantName(command) {
        const names = {
            'market': '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞',
            'founder': '–ò–¥–µ–∏ —Ñ–∞—É–Ω–¥–µ—Ä–∞',
            'business': '–ë–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å',
            'adapter': '–ê–¥–∞–ø—Ç–∞—Ç–æ—Ä –∏–¥–µ–π'
        };
        
        return names[command] || command;
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ –µ–≥–æ –∫–æ–º–∞–Ω–¥–µ
     * @param {string} command - –ö–æ–º–∞–Ω–¥–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     * @returns {string} - –û–ø–∏—Å–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     */
    function getAssistantDescription(command) {
        const descriptions = {
            'market': '–ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—ã–Ω–æ–∫, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ –Ω–∞–π—Ç–∏ –Ω–∏—à–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è',
            'founder': '–ü–æ–º–æ–≥–∞–µ—Ç –æ–±—Å—É–¥–∏—Ç—å –∏ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å –∏–¥–µ–∏ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è –±–∏–∑–Ω–µ—Å–∞',
            'business': '–ü–æ–º–æ–≥–∞–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å',
            'adapter': '–ü–æ–º–æ–≥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –∏–¥–µ–∏ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–µ–π—Å–æ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞'
        };
        
        return descriptions[command] || '–ë–∏–∑–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç';
    }
    
    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç HEX —Ü–≤–µ—Ç –≤ RGB –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
     * @param {string} hex - HEX-–∫–æ–¥ —Ü–≤–µ—Ç–∞
     * @returns {Object|null} - –û–±—ä–µ–∫—Ç —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ RGB –∏–ª–∏ null
     */
    function hexToRgb(hex) {
        const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }
});
